name: Container CI/CD Pipeline

on:
  push:
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  PROJECT_NAME: "hello-docker" # 唯一标识符（核心变量）

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-name: ${{ steps.process-name.outputs.safe-name }}
      image-tag: ${{ steps.meta.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Process naming
        id: process-name
        run: |
          SAFE_NAME=$(echo "$PROJECT_NAME" | 
            tr '[:upper:]' '[:lower:]' |
            sed 's/[^a-z0-9-]/-/g' |
            sed 's/-\+/-/g' |
            sed 's/^-\|-$//g')
          echo "safe-name=$SAFE_NAME" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=$SAFE_NAME" >> $GITHUB_ENV

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    env:
      CONTAINER_PREFIX: "github_"

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 保留原始前缀处理逻辑
            RAW_NAME="$CONTAINER_PREFIX${{ needs.build-and-push.outputs.image-name }}-${{ needs.build-and-push.outputs.image-tag }}"

            # 强化容器名称处理
            CLEAN_NAME=$(echo "$RAW_NAME" |
              tr '[:upper:]' '[:lower:]' |
              tr -c '[:alnum:]_-' '-' |
              sed 's/-\+/-/g' |
              sed 's/^[_-]*//;s/[_-]*$//' |
              cut -c 1-60)

            docker pull ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ needs.build-and-push.outputs.image-name }}:${{ needs.build-and-push.outputs.image-tag }}
            docker rm -f $CLEAN_NAME || true
            docker run -d \
              --name $CLEAN_NAME \
              --restart unless-stopped \
              -p 3000:80 \
              ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ needs.build-and-push.outputs.image-name }}:${{ needs.build-and-push.outputs.image-tag }}
